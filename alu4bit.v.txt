module alubit(result,cout,a,b,opcode,zero);
  input[3:0] a,b;
  input [2:0] opcode;
  output reg [3:0] result;
  output reg cout;
  output reg zero;
  always @(*) begin
    cout=0;
    case(opcode)
      3'b000:begin {cout,result} = a+b;end
      3'b001:begin{cout,result} = a-b;end
      3'b010:begin{cout,result} = a&b;end
      3'b011:begin{cout,result} = a|b;end
      3'b100:begin{cout,result} = a^b;end
      3'b101:begin result=(a==b) ? 4'b0001:4'b0000;end
        default:result=4'b0000;
    endcase
    zero=(result==4'b0000) ? 1:0;
  end 
endmodule
